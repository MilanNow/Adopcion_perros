import http.server
import socketserver
import webbrowser
import os
import threading
import time

# -------------------------------
# CONFIGURACI√ìN DEL SERVIDOR
# -------------------------------
PORT = 8000
DIRECTORIO = os.path.dirname(os.path.abspath(__file__))  # Ruta actual
os.chdir(DIRECTORIO)  # Cambia el directorio de trabajo al actual

# Manejador personalizado para mostrar logs de acceso
class CustomHandler(http.server.SimpleHTTPRequestHandler):
    def log_message(self, format, *args):
        """Sobrescribe la funci√≥n original para mostrar logs m√°s bonitos"""
        print(f"[üìÇ] Archivo solicitado: {self.path} | Desde: {self.client_address[0]}")

    def do_GET(self):
        """Sobrescribe GET para manejar errores 404 personalizados"""
        if not os.path.exists(self.translate_path(self.path)):
            self.send_error(404, f"Archivo no encontrado: {self.path}")
            print(f"[‚ùå] 404 - No encontrado: {self.path}")
        else:
            super().do_GET()

# -------------------------------
# FUNCI√ìN PARA ABRIR EL NAVEGADOR
# -------------------------------
def abrir_navegador():
    time.sleep(1)  # Espera un segundo a que el servidor est√© listo
    url = f"http://localhost:{PORT}/index.html"
    print(f"[üåê] Abriendo {url} en tu navegador predeterminado...")
    webbrowser.open(url)

# -------------------------------
# INICIO DEL SERVIDOR
# -------------------------------
def iniciar_servidor():
    try:
        with socketserver.TCPServer(("", PORT), CustomHandler) as httpd:
            print(f"[‚úÖ] Servidor corriendo en http://localhost:{PORT}")
            print(f"[üìÅ] Directorio ra√≠z: {DIRECTORIO}")
            print("[üí°] Presiona Ctrl + C para detener el servidor.\n")

            # Abre el navegador en un hilo aparte
            threading.Thread(target=abrir_navegador, daemon=True).start()

            httpd.serve_forever()
    except OSError as e:
        print(f"[‚ö†Ô∏è] Error al iniciar el servidor: {e}")
    except KeyboardInterrupt:
        print("\n[üõë] Servidor detenido manualmente.")
    finally:
        print("[üëã] Hasta luego!")

# -------------------------------
# EJECUCI√ìN
# -------------------------------
if __name__ == "__main__":
    iniciar_servidor()
